# Copyright Contributors to the OpenVDB Project
# SPDX-License-Identifier: Apache-2.0
#
# GitHub Actions workflow file
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: fVDB Codebuild

on:
  pull_request:
    paths-ignore:
        - 'CHANGES'
        - 'CODEOWNERS'
        - 'doc/**'
        - 'openvdb/**'
        - 'openvdb_cmd/**'
        - 'openvdb_ax/**'
        - 'openvdb_maya/**'
        - 'openvdb_houdini/**'
        - 'nanovdb/**'
        - 'pendingchanges/**'
        - '**.md'
        - 'fvdb/debug/**'
        - 'fvdb/docs/**'
        - 'fvdb/examples/**'
        - 'fvdb/notebooks/**'
        - 'fvdb/scripts/**'

permissions:
  contents: read
  id-token: write

jobs:
  # ---------------------------------------------------------------------------
  # Linux GPU (AWS CodeBuild)
  # ---------------------------------------------------------------------------

  linux_gpu:
    name: 'ci-openvdb 2024'
    # Don't run on forks
    if: github.repository == 'AcademySoftwareFoundation/openvdb'
    # GH-hosted VM. The build runs in CentOS 7 'container' hard-coded in
    # AWS CodeBuild project.
    # TODO: Add support for dynamic GH Action defined CodeBuild
    #       container choice.
    runs-on: ubuntu-latest
    steps:
      - name: Verify AWS Credentials Set
        run: |
          if [ -z "${{ secrets.CODEBUILD_ID }}" ] || [ -z "${{ secrets.CODEBUILD_SECRET }}" ]; then
            echo "Error: AWS credentials secrets not properly configured"
            echo "Please ensure CODEBUILD_ID and CODEBUILD_SECRET are set in organization secrets"
            exit 1
          fi
          echo "AWS credentials secrets are configured"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.CODEBUILD_ID }}
          aws-secret-access-key: ${{ secrets.CODEBUILD_SECRET }}
          aws-region: us-west-2
      - name: Verify AWS Authentication
        run: |
          echo "Testing AWS authentication..."
          aws sts get-caller-identity || {
            echo "Error: AWS authentication failed"
            exit 1
          }
          echo "AWS authentication successful"
      - name: CodeBuild Monitoring URLs
        run: |
          echo "üöÄ Starting CodeBuild job..."
          echo "Project: OpenVDB"
          echo ""
          echo "üìä Monitor the build progress at:"

          # Check if public builds are enabled by looking for the public project URL
          PUBLIC_URL=$(aws codebuild batch-get-projects --names OpenVDB --query 'projects[0].publicProjectUrl' --output text 2>/dev/null || echo "None")

          if [ "$PUBLIC_URL" != "None" ] && [ "$PUBLIC_URL" != "null" ]; then
            echo "üìñ Public Build Results (no sign-in required):"
            echo "   $PUBLIC_URL"
            echo ""
          fi

          echo "üîí AWS Console (requires sign-in):"
          echo "   Project: https://console.aws.amazon.com/codesuite/codebuild/projects/OpenVDB/history"
          echo ""
          echo "‚ÑπÔ∏è  Individual build URLs will be available once the job starts..."
      - name: Run CodeBuild
        id: codebuild
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: OpenVDB
          buildspec-override: ci/buildspec.yml
      - name: CodeBuild Results
        if: always()
        run: |
          echo "üìã CodeBuild Results:"
          echo "Build ID: ${{ steps.codebuild.outputs.aws-build-id }}"
          echo "Build Status: ${{ steps.codebuild.outputs.aws-build-status }}"
          echo ""
          echo "üîó Detailed Build Links:"
          if [ -n "$CODEBUILD_PUBLIC_BUILD_URL" ]; then
            echo "üìñ Public Build Details: $CODEBUILD_PUBLIC_BUILD_URL"
          fi
          echo "üîí AWS Console Build Details: https://console.aws.amazon.com/codesuite/codebuild/projects/OpenVDB/build/${{ steps.codebuild.outputs.aws-build-id }}/"
          echo ""
          if [ "${{ steps.codebuild.outputs.aws-build-status }}" != "SUCCEEDED" ]; then
            echo "‚ùå Build failed! Check the build logs at the links above for detailed error information."
            echo "Common issues to check:"
            echo "- Build environment configuration"
            echo "- Source code compilation errors"
            echo "- Missing dependencies"
            echo "- Buildspec.yml configuration"
          else
            echo "‚úÖ Build succeeded!"
          fi

#!/usr/bin/env bash

set -x

TASK="$1"
HOUDINI_BUILD="$2"

if [ "$TASK" = "pre_install" ]; then
    # install main pre-requisites
    sudo apt-get update
    sudo apt-get install -y libboost-all-dev
    sudo apt-get install -y libtbb-dev
    sudo apt-get install -y libcppunit-dev
    # sym-links reduce command word lengths
    sudo ln -s $PWD /test
    cd /test
    # enable all warnings and treat them as errors
    sed -i 's/-pthread/-pthread -Wall -Wextra -Werror -pedantic/g' openvdb_points*/Makefile
    # download and unpack openvdb core library
    wget http://www.openvdb.org/download/openvdb_3_1_0_library.zip
    unzip openvdb_3_1_0_library.zip
    if [ "$HOUDINI_BUILD" != "none" ]; then
        # install houdini pre-requisites
        sudo apt-get install -y libxi-dev
        sudo apt-get install -y csh
        # houdini builds fail due to unused local typedef warnings in boost::bind so disable this
        sed -i 's/HCUSTOM_EXTRA_CFLAGS := /HCUSTOM_EXTRA_CFLAGS := -Wno-unused-local-typedefs /g' openvdb_points_houdini/Makefile
        # download and unpack openvdb houdini library
        wget http://www.openvdb.org/download/openvdb_3_1_0_houdini.zip
        unzip openvdb_3_1_0_houdini.zip
        # download and unpack houdini headers and libraries from public FTP
        wget ftp://ftp.sidefx.com/public/Houdini`echo $HOUDINI_BUILD | cut -d'-' -f 2 | cut -d'.' -f 1,2`/$HOUDINI_BUILD.tar.gz
        tar -xzf $HOUDINI_BUILD.tar.gz
        ln -s $HOUDINI_BUILD hou
        cd hou
        tar -xzf houdini.tar.gz
        cd -
    fi
elif [ "$TASK" = "install" ]; then
    if [ "$HOUDINI_BUILD" = "none" ]; then
        # openvdb for standalone
        make -C openvdb \
            DESTDIR=/tmp/OpenVDB_3_1_0 \
            BOOST_LIB_DIR=/usr/lib/x86_64-linux-gnu \
            EXR_INCL_DIR=/usr/include/OpenEXR \
            EXR_LIB_DIR=/usr/local/lib \
            TBB_LIB_DIR=/usr/lib \
            BLOSC_INCL_DIR= \
            CONCURRENT_MALLOC_LIB= DOXYGEN= LOG4CPLUS_INCL_DIR= PYTHON_INCL_DIR= GLFW_INCL_DIR= \
            install -j
    else
        cd hou
        source houdini_setup
        cd -
        # openvdb for houdini
        make -C openvdb \
            DESTDIR=/tmp/OpenVDB_3_1_0 \
            BOOST_INCL_DIR=/test/hou/toolkit/include \
            BOOST_LIB_DIR=/test/hou/dsolib \
            TBB_LIB_DIR=/test/hou/dsolib \
            EXR_INCL_DIR=/test/hou/toolkit/include \
            EXR_LIB_DIR=/test/hou/dsolib \
            BLOSC_INCL_DIR= \
            CONCURRENT_MALLOC_LIB= DOXYGEN= LOG4CPLUS_INCL_DIR= PYTHON_INCL_DIR= GLFW_INCL_DIR= \
            install -j
        # openvdb houdini (lib only)
        make -C openvdb_houdini \
            HOUDINI_INCL_DIR=/test/hou/toolkit/include \
            OPENVDB_INCL_DIR=/tmp/OpenVDB_3_1_0/include \
            OPENVDB_LIB_DIR=/tmp/OpenVDB_3_1_0/lib \
            TBB_LIB_DIR=/test/hou/dsolib \
            BOOST_INCL_DIR=/test/hou/toolkit/include \
            BOOST_LIB_DIR=/test/hou/dsolib \
            EXR_INCL_DIR=/test/hou/toolkit/include \
            EXR_LIB_DIR=/test/hou/dsolib \
            BLOSC_INCL_DIR= \
            CONCURRENT_MALLOC_LIB= DOXYGEN= LOG4CPLUS_INCL_DIR= PYTHON_INCL_DIR= GLFW_INCL_DIR= \
            houdinilib -j
        # manually install only headers and lib (to avoid building openvdb houdini SOPs)
        mkdir houdini_utils
        cp openvdb_houdini/houdini/*.h openvdb_houdini
        cp openvdb_houdini/houdini/*.h houdini_utils
        cp openvdb_houdini/libopenvdb_houdini* /tmp/OpenVDB_3_1_0/lib
    fi
elif [ "$TASK" = "script" ]; then
    if [ "$HOUDINI_BUILD" = "none" ]; then
        # openvdb points for standalone
        make -C openvdb_points \
            DESTDIR=/tmp/OpenVDB_3_1_0 \
            BOOST_LIB_DIR=/usr/lib/x86_64-linux-gnu \
            OPENVDB_LIB_DIR=$PWD/openvdb \
            TBB_LIB_DIR=/usr/lib \
            EXR_INCL_DIR=/usr/include/OpenEXR \
            EXR_LIB_DIR=/usr/local/lib \
            BLOSC_INCL_DIR= \
            CONCURRENT_MALLOC_LIB= DOXYGEN= LOG4CPLUS_INCL_DIR= PYTHON_INCL_DIR= GLFW_INCL_DIR= \
            test -j
    else
        cd hou
        source houdini_setup
        cd -
        # openvdb points for houdini
        make -C openvdb_points \
            DESTDIR=/tmp/OpenVDB_3_1_0 \
            BOOST_LIB_DIR=/test/hou/dsolib \
            OPENVDB_INCL_DIR=/tmp/OpenVDB_3_1_0/include \
            OPENVDB_LIB_DIR=/tmp/OpenVDB_3_1_0/lib \
            TBB_LIB_DIR=/test/hou/dsolib \
            EXR_INCL_DIR=/test/hou/toolkit/include \
            EXR_LIB_DIR=/test/hou/dsolib \
            BLOSC_INCL_DIR= \
            CONCURRENT_MALLOC_LIB= DOXYGEN= LOG4CPLUS_INCL_DIR= PYTHON_INCL_DIR= GLFW_INCL_DIR= \
            install -j
        # openvdb points houdini (lib and SOPs)
        make -C openvdb_points_houdini \
            DESTDIR=/tmp/OpenVDB_3_1_0 \
            HOUDINI_INCL_DIR=/test/hou/toolkit/include \
            BOOST_INCL_DIR=/test/hou/toolkit/include \
            BOOST_LIB_DIR=/test/hou/dsolib \
            OPENVDB_INCL_DIR=/tmp/OpenVDB_3_1_0/include \
            OPENVDB_LIB_DIR=/tmp/OpenVDB_3_1_0/lib \
            TBB_LIB_DIR=/test/hou/dsolib \
            EXR_INCL_DIR=/test/hou/toolkit/include \
            EXR_LIB_DIR=/test/hou/dsolib \
            BLOSC_INCL_DIR= \
            CONCURRENT_MALLOC_LIB= DOXYGEN= LOG4CPLUS_INCL_DIR= PYTHON_INCL_DIR= GLFW_INCL_DIR= \
            all -j
    fi
fi

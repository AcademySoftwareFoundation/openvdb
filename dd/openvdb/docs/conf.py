# -*- coding: utf-8 -*-
#
# DD documentation build configuration file, created by
# sphinx-quickstart on Mon Oct 31 09:57:48 2011.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import os
import sys
import getpass
import datetime

try:
    from os.path import relpath as _relpath
except ImportError: # b/w compat py2.5
    def _relpath(path, start=os.curdir):
        """Return a relative version of a path"""
        from os.path import curdir, sep, pardir, join, abspath, commonprefix
        if not path:
            raise ValueError("no path specified")
        start_list = abspath(start).split(sep)
        path_list = abspath(path).split(sep)
        # Work out how much of the filepath is shared by start and path.
        i = len(commonprefix([start_list, path_list]))
        rel_list = [pardir] * (len(start_list)-i) + path_list[i:]
        if not rel_list:
            return curdir
        return join(*rel_list)


PACKAGE_NAME = os.environ['PACKAGE_NAME']
PACKAGE_VERSION = os.environ['PACKAGE_VERSION']
PACKAGE_ROOT = os.environ['PACKAGE_ROOT']

AUTHOR = getpass.getuser()

try:
    PACKAGE_VERSION_MAJOR, PACKAGE_VERSION_MINOR, __ = PACKAGE_VERSION.split(".", 2)
except ValueError:
    PACKAGE_VERSION_MAJOR = PACKAGE_VERSION_MINOR = ""

BUILD_ROOT = os.path.join(PACKAGE_ROOT, 'private', 'build', PACKAGE_NAME)
BUILD_PYTHON_ROOT = os.path.join(BUILD_ROOT, 'python')

# The directory this file is located in. Use realpath in case there
# would be symlinks used in the directory tree.
dirname = os.path.realpath(os.path.abspath(os.path.dirname(__file__)))

# Extensions specific to this package should be placed under the '_ext' 
# directory, next to this file.  We place the path in 'sys.path' 
# even if the folder does not exist.
_extpath = os.path.join(dirname, '_ext')
if os.path.exists(_extpath):
    sys.path.insert(0, _extpath)

# If this package contains python code, we will add the python root 
# to 'sys.path' for modules to be automatically discoverable by sphinx.
sys.path.insert(0, BUILD_PYTHON_ROOT)

# Load the facility's extensions and themes. This offer to the user a 
# bunch of themes and extensions maintained for the studio.
import dd.runtime.api
dd.runtime.api.load("sphinx_extensions")
import sphinx_extensions

SPHINX_EXTENSIONS_THEMES_PATH = _relpath(sphinx_extensions.getThemesPath(), dirname)


# -- General configuration -----------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# General information about the project.
project = u'%s' % PACKAGE_NAME
year = datetime.datetime.now().year
copyright = u'%s, Digital Domain Productions, Inc. All rights reserved' % year

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = "%s.%s" % (PACKAGE_VERSION_MAJOR, PACKAGE_VERSION_MINOR)
# The full version, including alpha/beta/rc tags.
release = PACKAGE_VERSION

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''

# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The suffix of source filenames.
source_suffix = '.rst'

# Add any paths that contain templates here, relative to this directory.
#templates_path = ['_templates']

# The master toctree document.
master_doc = 'index'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
#exclude_patterns = []

# The reST default role (used for this markup: `text`) to use for all documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# By default, highlight as Python.
highlight_language = "python"

# The name of the Pygments (syntax highlighting) style to use.
# Overriding whatever is set in the theme's theme.conf.
#pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = [
    'sphinx.ext.intersphinx',          # cross-reference with other package's documentation
    #'sphinx.ext.autodoc',              # automatic API documentation
    #'sphinx.ext.autosummary',          # automatic API documentation
    #'sphinx.ext.viewcode',             # including links to source code
    #'sphinx.ext.todo',                 # highlighting
    #'sphinx.ext.inheritance_diagram',  # inheritance-diagram directive

    #"sphinxcontrib.httpdomain",        # document REST APIs

    #'sphinx_extensions.betterdocs',    # extend the builtin extensions
    #'sphinx_extensions.jsonhilight',   # add support for json highlighting
    #'sphinx_extensions.meldomain',     # add support for mel highlighting
    #'sphinx_extensions.require',       # add support for package loading
]

# -- Builtin-extensions configuration ----------------------------------------

## sphinx.ext.autosummary ----------------------------------------------------

# Boolean indicating whether to scan all found documents for autosummary 
# directives, and to generate stub pages for each.
# Can also be a list of documents for which stub pages should be generated.
# The new files will be placed in the directories specified in the 
# :toctree: options of the directives.
#autosummary_generate = True

## sphinx.ext.autodoc --------------------------------------------------------

# You can choose which docstring will be picked to document a class's main body:
# - "class": use the class' docstring (default)
# - "init": use the __init__ method’s docstring
# - "both": the class’ and the __init__ method’s docstring are concatenated
autoclass_content = "both"

# Select the sort order for documented members:
# - "alphabetical": the default.
# - "groupwise": by member type (function, classmethod, attributes...)
# - "bysource": the order they are defined.
autodoc_member_order = "bysource"

# The list of autodoc directive flags that should be automatically applied.
# The supported flags are "members", "undoc-members", "private-members", 
# "special-members", "inherited-members" and "show-inheritance".
autodoc_default_flags = []


## sphinx.ext.intersphinx ----------------------------------------------------

# Contains the locations and names of other projects that should be 
# linked to in this documentation.
intersphinx_mapping = {"python": ("http://docs.python.org/2.7", None)}

## sphinx.ext.inheritance_diagram --------------------------------------------

# A dictionary of graphviz graph attributes for inheritance diagrams.
inheritance_graph_attrs = {
    "rankdir": "TB",
    "size": '"6.0, 6.0"',
    "fontsize": 14,
    "ratio": "compress",
}

# A dictionary of graphviz node attributes for inheritance diagrams.
#inheritance_node_attrs = {}

# A dictionary of graphviz edge attributes for inheritance diagrams.
#inheritance_edge_attrs = {}


# -- DigitalDomain-extensions configuration ----------------------------------

## sphinx_extensions.require -------------------------------------------------

# A list of package names that should be loaded before generating
# documentation. You can optionally specifiy a version constraint.
#dd_load_packages = ['massivepipeline', 'lightpipeline==1.2.3']

# A list of 2-tuple (name, path) where the `name` if the name of the module to import
# and `path` a relative path to the source file it is defined in. Note that
# the relative path must be against the $BUILD_ROOT and not $PACKAGE_ROOT.
#dd_relative_imports = [('lightpipeline', 'maya/scripts')]

# A list of python namespaces representing fully qualified module names for 
# which will be assigned a mock. Note that 'dd', 'dd.runtime' and 'dd.runtime.api'
# are black-listed names, they will be ignored.
#dd_mocked_modules = ['ddlogger', 'preferences']

## sphinx_extensions.betterdocs ----------------------------------------------

# Instances of this class are used by the HTML builder.  Put the full python
# path to the class.
#html_translator_class = "sphinx_extensions.betterdocs.CustomHtmlTranslator"


# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'xhaiku'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {"collapsiblesidebar": True}

# Add any paths that contain custom themes here, relative to this directory.
html_theme_path = [SPHINX_EXTENSIONS_THEMES_PATH]

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
html_title = "%s %s Documentation" % (PACKAGE_NAME, release)

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
#html_static_path = ['_static']

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
html_last_updated_fmt = "%b %d, %Y"

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
#htmlhelp_basename = PACKAGE_NAME

# -- Options for LaTeX output --------------------------------------------------

# The paper size ('letter' or 'a4').
#latex_paper_size = 'letter'

# The font size ('10pt', '11pt' or '12pt').
#latex_font_size = '10pt'

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
        ("index", "%s.tex" % PACKAGE_NAME,
         u"%s Documentation" % PACKAGE_NAME, AUTHOR, "manual"),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Additional stuff for the LaTeX preamble.
#latex_preamble = ''

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output --------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [("index", PACKAGE_NAME, u"%s Documentation" % PACKAGE_NAME, [AUTHOR], 1)]


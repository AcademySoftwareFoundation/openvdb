
#type: node
#context: sop
#internal: DW_OpenVDBFracture
#icon: COMMON/openvdb

#tags: vdbs

= OpenVDB Fracture =

"""Cuts level set VDB volume primitives into multiple pieces."""

This node splits level set VDB volume primitives into multiple fragments.

To fracture the VDB primitives, you must supply some _cutter_ geometry in the
second input. The optional third input specifies points onto which the cutter
geometry will be instanced (or transformed onto) to perform the cutting.

Typically, the first input is the result from a [OpenVDB from
Polygons|Node:sop/DW_OpenVDBFromPolygons] node. The fractured result can then be
converted back to polygons seamlessly by using the [OpenVDB Convert|Node:sop/DW_OpenVDBConvert] node with the original polygons as the second input.

NOTE:
    The cutter geometry must be a closed surface but does not need to be
    manifold. The cutter geometry can contain self intersections and
    degenerate faces. Normals on the cutter geometry are ignored.

NOTE:
    The reference points supplied in the optional third input can have
    attributes that control how the cutter is transformed onto them. This
    follows the same rules as what the [Copy|Node:sop/copy] node does, except
    for scaling. Scaling SDFs correctly require that the level set be rebuilt
    at the same time. Thus you must scale your cutter geometry appropriately
    first.

@parameters

Group:
    The name(s) of the VDB primitives to fracture.
    See [specifying volumes|/model/volumes#group].

Separate Cutters by Connectivity:
    The cutter geometry will be classified by point connectivity.  Each
    connected component will be cut separately.  Use this if an individual
    piece of cutting eometry has overlapping components.

Allow Cutter Overlap:
    Allow consecutive cutter instances to fracture previously generated
    fragments.

Center Cutter Geometry:
    If enabled, the cutter geometry will be first centered around its point
    position centroid.

Randomize Cutter Rotation:
    Apply a random rotation to each cutter as it is instanced onto each point.

Random Seed:
    Seed value for randomize cutter rotation.

Split Input Fragments into Primitives:
    Split input VDBs with disjoint fragments into multiple primitives, one per
    fragment.

    If you have a tube and cut out the middle, the two ends might end up in the
    same VDB.  This option will detect that and split the ends into two VDBs.

    NOTE:
	This operation only needs to be performed if you plan on using the
	output fragments for collision detection. If you use multiple fracture
	nodes, then it is most efficient to only enable it on the very last
	fracture node.

Fragment Group:
    Specifies the group name to associate all fragments generated by this
    fracture. The residual fragments of the input VDBs are excluded from this
    group.

Visualization:
    The generated VDBs can be coloured uniquely to make it easy to see the new
    pieces.  The New Fragments option will leave the original pieces with their
    original colouring, only affecting the net-new pieces.


@related

- [Node:sop/DW_OpenVDBFromPolygons]
- [Node:sop/DW_OpenVDBConvert]

// Copyright (c) 2012-2017 DreamWorks Animation LLC
// All rights reserved. This software is distributed under the
// Mozilla Public License 2.0 ( http://www.mozilla.org/MPL/2.0/ )

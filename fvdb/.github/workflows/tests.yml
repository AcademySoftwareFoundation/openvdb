name: Running Tests

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - 'debug/**'
      - 'docs/**'
      - 'examples/**'
      - 'notebooks/**'
      - 'scripts/**'

permissions:
  contents: write
  deployments: write

jobs:

  fvdb-build:
    name: fVDB Build
    runs-on:
      - self-hosted
    container:
      image: aswf/ci-openvdb:2023-clang15.0
    steps:
      - uses: actions/checkout@v4

      - name: Set up fvdb_build Conda env
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          channels: conda-forge
          channel-priority: strict
          activate-environment: fvdb_build
          environment-file: env/build_environment.yml


      - name: Buid fvdb
        run: |
          TORCH_CUDA_ARCH_LIST="7.0;7.5;8.0;8.6+PTX" MAX_JOBS=$(($(nproc) < $(free -g | awk '/^Mem:/{jobs=int($7/2.5); if(jobs<1) jobs=1; print jobs}') ? $(nproc) : $(free -g | awk '/^Mem:/{jobs=int($7/2.5); if(jobs<1) jobs=1; print jobs}'))) python setup.py bdist_wheel --dist-dir=dist
        shell:
          bash -el {0}

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
            name: fvdb-test-package
            path: dist/*.whl

      - name: Clean Conda
        run: |
          conda clean -pty
        shell:
          bash -el {0}

  fvdb-unit-test:
    needs: [fvdb-build]
    name: fVDB Unit Tests
    runs-on:
      - self-hosted
    container:
      image: aswf/ci-openvdb:2023-clang15.0
    steps:
      - uses: actions/checkout@v4
      - name: Set up fvdb_test Conda env
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          channels: conda-forge
          channel-priority: strict
          activate-environment: fvdb_test
          environment-file: env/test_environment.yml

      - name: Download package
        uses: actions/download-artifact@v4
        with:
            name: fvdb-test-package
            path: ./dist

      - name: Install package
        run: |
            conda activate fvdb_test
            pip install ./dist/*.whl
        shell:
              bash -el {0}

      - name: Run tests
        run: |
            cd tests;
            pytest -v unit
        shell:
              bash -el {0}

      - name: Clean Conda
        run: |
            conda clean -pty
        shell:
            bash -el {0}

  fvdb-benchmarks:
    needs: [fvdb-build]
    name: fVDB Continuous Benchmarking
    runs-on:
      - self-hosted
    container:
      image: aswf/ci-openvdb:2023-clang15.0

    steps:
      - uses: actions/checkout@v4
      - name: Set up fvdb_test Conda env
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          channels: conda-forge
          channel-priority: strict
          activate-environment: fvdb_test
          environment-file: env/test_environment.yml

      - name: Download package
        uses: actions/download-artifact@v4
        with:
            name: fvdb-test-package
            path: ./dist

      - name: Install package
        run: |
            conda activate fvdb_test
            pip install ./dist/*.whl
        shell:
          bash -el {0}

      - name: Disable git ownership verification
        run: |
          git config --global --add safe.directory "$(pwd)"
        shell:
          bash -el {0}

      - name: Run benchmarks
        run: |
          cd tests;
          pytest benchmark --benchmark-json benchmark/output.json
        shell:
          bash -el {0}

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
            name: Python Benchmark with pytest-benchmark
            tool: 'pytest'
            output-file-path: tests/benchmark/output.json
            # Use personal access token instead of GITHUB_TOKEN due to https://github.community/t/github-action-not-triggering-gh-pages-upon-push/16096
            github-token: ${{ secrets.GITHUB_TOKEN }}
            auto-push: true
            # Show alert with commit comment on detecting possible performance regression
            alert-threshold: '200%'
            comment-on-alert: true
            fail-on-alert: true
            alert-comment-cc-users: '@swahtz'

      - name: Clean Conda
        run: |
            conda clean -pty
        shell:
            bash -el {0}